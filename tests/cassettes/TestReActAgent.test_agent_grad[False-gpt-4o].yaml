interactions:
  - request:
      body:
        '{"messages": [{"role": "system", "content": "Answer the following questions
        as best you can. You have access to the following tools:\n\nNAME: print_story\n\nSYNOPSIS:\n    print_story(string
        story)\n\nDESCRIPTION:\n    Print a story.\n\nPARAMETERS:\n    story (string):
        Story to print.\n\nNAME: cast_float\n\nSYNOPSIS:\n    cast_float(string x)\n\nDESCRIPTION:\n    Cast
        the input argument x to a float.\n\nPARAMETERS:\n    x (string): No description
        provided.\n\nNAME: cast_int\n\nSYNOPSIS:\n    cast_int(number x)\n\nDESCRIPTION:\n    Cast
        the input argument x to an integer.\n\nPARAMETERS:\n    x (number): No description
        provided.\n\nUse the following format:\n\nThought: you should always think about
        what to do\nAction: the action to take, should be one of [print_story, cast_float,
        cast_int]\nAction Input: comma separated list of inputs to action as python
        tuple\nObservation: the result of the action\n... (this Thought/Action/Action
        Input/Observation can repeat N times)\n\nExample:\n\nThought: I need to use
        the get_weather tool\nAction: get_weather\nAction Input: \"New York\", 7\nObservation:
        The 7 day forecast for New York is [...]"}, {"role": "user", "content": "Write
        a 5 word story via print_story"}], "model": "gpt-4o", "stop": ["Observation:",
        "Action:"], "temperature": 0.1, "tool_choice": "none", "tools": [{"type": "function",
        "function": {"name": "print_story", "description": "Print a story.", "parameters":
        {"type": "object", "properties": {"story": {"description": "Story to print.",
        "title": "Story", "type": "string"}}, "required": ["story"]}}}, {"type": "function",
        "function": {"name": "cast_float", "description": "Cast the input argument x
        to a float.", "parameters": {"type": "object", "properties": {"x": {"title":
        "X", "type": "string"}}, "required": ["x"]}}}, {"type": "function", "function":
        {"name": "cast_int", "description": "Cast the input argument x to an integer.",
        "parameters": {"type": "object", "properties": {"x": {"title": "X", "type":
        "number"}}, "required": ["x"]}}}]}'
      headers:
        accept:
          - application/json
        accept-encoding:
          - gzip, deflate, br, zstd
        connection:
          - keep-alive
        content-length:
          - "2020"
        content-type:
          - application/json
        host:
          - api.openai.com
        user-agent:
          - AsyncOpenAI/Python 1.46.1
        x-stainless-arch:
          - arm64
        x-stainless-async:
          - async:asyncio
        x-stainless-lang:
          - python
        x-stainless-os:
          - MacOS
        x-stainless-package-version:
          - 1.46.1
        x-stainless-raw-response:
          - "true"
        x-stainless-runtime:
          - CPython
        x-stainless-runtime-version:
          - 3.11.9
      method: POST
      uri: https://api.openai.com/v1/chat/completions
    response:
      body:
        string: !!binary |
          YwBQEwBAjJwrH6N2Vpcw7h4UoHsuYVJSN/3fW+Cwi7aPO8E6QM77+SLredQ0DTTiTE9axSIRvb77
          g2+vAmBXUoJFm+3FpEfz8vzRpsWbP7jB0TxG90/Pz8nDo3tz99nUFQ0BUOV9VeycwkoxcJ2aIbRy
          eagqKeHGvuOGoee6xBeTKquREmz0bgbK9BwvMJ3EdCLmYKu6otoo8SUA4LrzAD5/P6WEY5zSZAxJ
          CfwJ4KrGihLMtq3b9mzeaQBq3esOEiTVHqRfzEZKzMc4ssCpqzCqRq8q3zDMBtrGbfZ3ZdYsJbjt
          SlNjdArgx6flYeYj6lVNev/b1VDNGyX8MBwzRrGGIP7O+OcBNVKNsSlS/LWcg03jOcAiK9qqXGju
          OvV2isE++t3c2IYlcSENWN3/4q/u5qZa9dqF+b7Wf7GX53UWOW5AcQoDAw==
      headers:
        CF-Cache-Status:
          - DYNAMIC
        CF-RAY:
          - 8d9e6d17e969230a-SJC
        Connection:
          - keep-alive
        Content-Encoding:
          - br
        Content-Type:
          - application/json
        Date:
          - Mon, 28 Oct 2024 22:40:11 GMT
        Server:
          - cloudflare
        Transfer-Encoding:
          - chunked
        X-Content-Type-Options:
          - nosniff
        access-control-expose-headers:
          - X-Request-ID
        alt-svc:
          - h3=":443"; ma=86400
        openai-organization:
          - future-house-xr4tdh
        openai-processing-ms:
          - "93"
        openai-version:
          - "2020-10-01"
        strict-transport-security:
          - max-age=31536000; includeSubDomains; preload
        x-ratelimit-limit-requests:
          - "10000"
        x-ratelimit-limit-tokens:
          - "30000000"
        x-ratelimit-remaining-requests:
          - "9999"
        x-ratelimit-remaining-tokens:
          - "28568249"
        x-ratelimit-reset-requests:
          - 6ms
        x-ratelimit-reset-tokens:
          - 2.863s
        x-request-id:
          - req_00915627c507f056e3bc9398d4bbd4b5
      status:
        code: 200
        message: OK
  - request:
      body:
        '{"messages": [{"role": "system", "content": "Answer the following questions
        as best you can. You have access to the following tools:\n\nNAME: print_story\n\nSYNOPSIS:\n    print_story(string
        story)\n\nDESCRIPTION:\n    Print a story.\n\nPARAMETERS:\n    story (string):
        Story to print.\n\nNAME: cast_float\n\nSYNOPSIS:\n    cast_float(string x)\n\nDESCRIPTION:\n    Cast
        the input argument x to a float.\n\nPARAMETERS:\n    x (string): No description
        provided.\n\nNAME: cast_int\n\nSYNOPSIS:\n    cast_int(number x)\n\nDESCRIPTION:\n    Cast
        the input argument x to an integer.\n\nPARAMETERS:\n    x (number): No description
        provided.\n\nUse the following format:\n\nThought: you should always think about
        what to do\nAction: the action to take, should be one of [print_story, cast_float,
        cast_int]\nAction Input: comma separated list of inputs to action as python
        tuple\nObservation: the result of the action\n... (this Thought/Action/Action
        Input/Observation can repeat N times)\n\nExample:\n\nThought: I need to use
        the get_weather tool\nAction: get_weather\nAction Input: \"New York\", 7\nObservation:
        The 7 day forecast for New York is [...]"}, {"role": "user", "content": "Write
        a 5 word story via print_story"}, {"role": "assistant", "content": "Thought:
        . Based on this reasoning, let''s select the appropriate tool!\nAction: "},
        {"role": "user", "content": "Continue..."}], "model": "gpt-4o", "stop": ["Observation:",
        "Action:"], "temperature": 0.1, "tool_choice": "required", "tools": [{"type":
        "function", "function": {"name": "print_story", "description": "Print a story.",
        "parameters": {"type": "object", "properties": {"story": {"description": "Story
        to print.", "title": "Story", "type": "string"}}, "required": ["story"]}}},
        {"type": "function", "function": {"name": "cast_float", "description": "Cast
        the input argument x to a float.", "parameters": {"type": "object", "properties":
        {"x": {"title": "X", "type": "string"}}, "required": ["x"]}}}, {"type": "function",
        "function": {"name": "cast_int", "description": "Cast the input argument x to
        an integer.", "parameters": {"type": "object", "properties": {"x": {"title":
        "X", "type": "number"}}, "required": ["x"]}}}]}'
      headers:
        accept:
          - application/json
        accept-encoding:
          - gzip, deflate, br, zstd
        connection:
          - keep-alive
        content-length:
          - "2186"
        content-type:
          - application/json
        host:
          - api.openai.com
        user-agent:
          - AsyncOpenAI/Python 1.46.1
        x-stainless-arch:
          - arm64
        x-stainless-async:
          - async:asyncio
        x-stainless-lang:
          - python
        x-stainless-os:
          - MacOS
        x-stainless-package-version:
          - 1.46.1
        x-stainless-raw-response:
          - "true"
        x-stainless-runtime:
          - CPython
        x-stainless-runtime-version:
          - 3.11.9
      method: POST
      uri: https://api.openai.com/v1/chat/completions
    response:
      body:
        string: !!binary |
          IXQOACBWOq2nqW62NgbsrO5DikQZ9K80SA7pf24mFCCNNcE2r/FflvUSCgMuTQNN4IAOT8/cGkgE
          vYxyt53NfW3Zu9uACKICI5RN7ktlZXhw+9Qc6Ik4kZ/N4vLweOgvH+54T/TE4cUNOgERTPHHS68p
          dKcYeMJoCPHm8itegVEy7sfJcNhLesIHylRcghFq68OBCXtxbxDGkzAeKV82RpTcgdFXQES0vVoR
          Yfn7ERjFnVZiMoYJBvwSEVojORghd044n2uPDqCWvW6XkZ5LKTzyxsi0zKUkx05we1/z1U9zKdO3
          auwfe5+rjzt3qO+r2/q09/Z65K45MfPq2naKnIjRiiFlc4wwRwSdK/1P2VZonzpv2vUREmGk82CE
          7Tegf/wN9o2nuXbc07IRzvLWkeNly70jb0iLuvHdb+zBC/cttR3+uLG2eH8kl7hM2IOKkKa2rSnc
          RhYi5R1IPy92CeZ1IWBHuZaYD+wt2NYo61Nv/rl2YNSfJIwAcVdD8L0QAfhNBDWZMYg1mzaFNEsf
          dHG0hzIvG15VLu4jbqKduNMM9qjbQteVD6yJSIiQT2dC17wdYzRQTm067hXFLB/FyQDBPjAAAw==
      headers:
        CF-Cache-Status:
          - DYNAMIC
        CF-RAY:
          - 8d9e6d1a8c0e230a-SJC
        Connection:
          - keep-alive
        Content-Encoding:
          - br
        Content-Type:
          - application/json
        Date:
          - Mon, 28 Oct 2024 22:40:12 GMT
        Server:
          - cloudflare
        Transfer-Encoding:
          - chunked
        X-Content-Type-Options:
          - nosniff
        access-control-expose-headers:
          - X-Request-ID
        alt-svc:
          - h3=":443"; ma=86400
        openai-organization:
          - future-house-xr4tdh
        openai-processing-ms:
          - "526"
        openai-version:
          - "2020-10-01"
        strict-transport-security:
          - max-age=31536000; includeSubDomains; preload
        x-ratelimit-limit-requests:
          - "10000"
        x-ratelimit-limit-tokens:
          - "30000000"
        x-ratelimit-remaining-requests:
          - "9999"
        x-ratelimit-remaining-tokens:
          - "28643330"
        x-ratelimit-reset-requests:
          - 6ms
        x-ratelimit-reset-tokens:
          - 2.713s
        x-request-id:
          - req_91f092dd3cc8fc550eec2887c8c6e03e
      status:
        code: 200
        message: OK
version: 1
