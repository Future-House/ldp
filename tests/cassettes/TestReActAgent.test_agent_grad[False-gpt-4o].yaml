interactions:
  - request:
      body:
        '{"messages": [{"role": "system", "content": "Answer the following questions
        as best you can. You have access to the following tools:\n\nNAME: print_story\n\nSYNOPSIS:\n    print_story(string
        story)\n\nDESCRIPTION:\n    Print a story.\n\nPARAMETERS:\n    story (string):
        Story to print.\n\nNAME: cast_float\n\nSYNOPSIS:\n    cast_float(string x)\n\nDESCRIPTION:\n    Cast
        the input argument x to a float.\n\nPARAMETERS:\n    x (string): No description
        provided.\n\nNAME: cast_int\n\nSYNOPSIS:\n    cast_int(number x)\n\nDESCRIPTION:\n    Cast
        the input argument x to an integer.\n\nPARAMETERS:\n    x (number): No description
        provided.\n\nUse the following format:\n\nThought: you should always think about
        what to do\nAction: the action to take, should be one of [print_story, cast_float,
        cast_int]\nAction Input: comma separated list of inputs to action as python
        tuple\nObservation: the result of the action\n... (this Thought/Action/Action
        Input/Observation can repeat N times)\n\nExample:\n\nThought: I need to use
        the get_weather tool\nAction: get_weather\nAction Input: \"New York\", 7\nObservation:
        The 7 day forecast for New York is [...]"}, {"role": "user", "content": "Write
        a 5 word story via print_story"}], "model": "gpt-4o", "stop": ["Observation:",
        "Action:"], "temperature": 0.1, "tool_choice": "none", "tools": [{"type": "function",
        "function": {"name": "print_story", "description": "Print a story.", "parameters":
        {"type": "object", "properties": {"story": {"description": "Story to print.",
        "title": "Story", "type": "string"}}, "required": ["story"]}}}, {"type": "function",
        "function": {"name": "cast_float", "description": "Cast the input argument x
        to a float.", "parameters": {"type": "object", "properties": {"x": {"title":
        "X", "type": "string"}}, "required": ["x"]}}}, {"type": "function", "function":
        {"name": "cast_int", "description": "Cast the input argument x to an integer.",
        "parameters": {"type": "object", "properties": {"x": {"title": "X", "type":
        "number"}}, "required": ["x"]}}}]}'
      headers:
        accept:
          - application/json
        accept-encoding:
          - gzip, deflate
        connection:
          - keep-alive
        content-length:
          - "2020"
        content-type:
          - application/json
        host:
          - api.openai.com
        user-agent:
          - AsyncOpenAI/Python 1.46.1
        x-stainless-arch:
          - arm64
        x-stainless-async:
          - async:asyncio
        x-stainless-lang:
          - python
        x-stainless-os:
          - MacOS
        x-stainless-package-version:
          - 1.46.1
        x-stainless-raw-response:
          - "true"
        x-stainless-runtime:
          - CPython
        x-stainless-runtime-version:
          - 3.11.9
      method: POST
      uri: https://api.openai.com/v1/chat/completions
    response:
      body:
        string: !!binary |
          H4sIAAAAAAAAA2yQS2vDMBCE7/4VYs9xcRLbaXJrD4VCSwk0h1KKUeS1rVSWhLTug5D/Xvxo4pBc
          dJjRfDu7+4AxkDmsGIiKk6itCu+eqvXL10Y8lw0Vbw+P36+Rlfeb9XJXpjVM2oTZ7lDQf+pGmNoq
          JGl0bwuHnLClThez5WKeTBdpZ9QmR9XGSkthbMJZNIvD6DaM0iFYGSnQw4q9B4wxtu/etqLO8QdW
          LJr8KzV6z0uE1fETY+CMahXg3ktPXBNMTqYwmlB3rceyw6LxvG2lG6UG/XCco0xpndn6wT/qhdTS
          V5lD7o1umZ6Mhc49BIx9dPs0ZxXBOlNbysh8om6B8yTpeXC64MkddgUyxNW10Bkuy5G4VH50EBBc
          VJiPiMFot8uZ1xD9flKXF5RgIIH/9YR1VkhdorNO9icubBYnIs0xXs5jCA7BHwAAAP//AwBG+V0F
          awIAAA==
      headers:
        CF-Cache-Status:
          - DYNAMIC
        CF-RAY:
          - 8d765e519df306a9-SJC
        Connection:
          - keep-alive
        Content-Encoding:
          - gzip
        Content-Type:
          - application/json
        Date:
          - Thu, 24 Oct 2024 01:59:36 GMT
        Server:
          - cloudflare
        Transfer-Encoding:
          - chunked
        X-Content-Type-Options:
          - nosniff
        access-control-expose-headers:
          - X-Request-ID
        alt-svc:
          - h3=":443"; ma=86400
        openai-organization:
          - future-house-xr4tdh
        openai-processing-ms:
          - "404"
        openai-version:
          - "2020-10-01"
        strict-transport-security:
          - max-age=31536000; includeSubDomains; preload
        x-ratelimit-limit-requests:
          - "10000"
        x-ratelimit-limit-tokens:
          - "30000000"
        x-ratelimit-remaining-requests:
          - "9999"
        x-ratelimit-remaining-tokens:
          - "29999710"
        x-ratelimit-reset-requests:
          - 6ms
        x-ratelimit-reset-tokens:
          - 0s
        x-request-id:
          - req_65cdf9f91c29f5d1469c4cd9e001b8ad
      status:
        code: 200
        message: OK
  - request:
      body:
        '{"messages": [{"role": "system", "content": "Answer the following questions
        as best you can. You have access to the following tools:\n\nNAME: print_story\n\nSYNOPSIS:\n    print_story(string
        story)\n\nDESCRIPTION:\n    Print a story.\n\nPARAMETERS:\n    story (string):
        Story to print.\n\nNAME: cast_float\n\nSYNOPSIS:\n    cast_float(string x)\n\nDESCRIPTION:\n    Cast
        the input argument x to a float.\n\nPARAMETERS:\n    x (string): No description
        provided.\n\nNAME: cast_int\n\nSYNOPSIS:\n    cast_int(number x)\n\nDESCRIPTION:\n    Cast
        the input argument x to an integer.\n\nPARAMETERS:\n    x (number): No description
        provided.\n\nUse the following format:\n\nThought: you should always think about
        what to do\nAction: the action to take, should be one of [print_story, cast_float,
        cast_int]\nAction Input: comma separated list of inputs to action as python
        tuple\nObservation: the result of the action\n... (this Thought/Action/Action
        Input/Observation can repeat N times)\n\nExample:\n\nThought: I need to use
        the get_weather tool\nAction: get_weather\nAction Input: \"New York\", 7\nObservation:
        The 7 day forecast for New York is [...]"}, {"role": "user", "content": "Write
        a 5 word story via print_story"}, {"role": "assistant", "content": "Thought:
        . Based on this reasoning, let''s select the appropriate tool!\n Action: "}],
        "model": "gpt-4o", "stop": ["Observation:", "Action:"], "temperature": 0.1,
        "tool_choice": "required", "tools": [{"type": "function", "function": {"name":
        "print_story", "description": "Print a story.", "parameters": {"type": "object",
        "properties": {"story": {"description": "Story to print.", "title": "Story",
        "type": "string"}}, "required": ["story"]}}}, {"type": "function", "function":
        {"name": "cast_float", "description": "Cast the input argument x to a float.",
        "parameters": {"type": "object", "properties": {"x": {"title": "X", "type":
        "string"}}, "required": ["x"]}}}, {"type": "function", "function": {"name":
        "cast_int", "description": "Cast the input argument x to an integer.", "parameters":
        {"type": "object", "properties": {"x": {"title": "X", "type": "number"}}, "required":
        ["x"]}}}]}'
      headers:
        accept:
          - application/json
        accept-encoding:
          - gzip, deflate
        connection:
          - keep-alive
        content-length:
          - "2143"
        content-type:
          - application/json
        host:
          - api.openai.com
        user-agent:
          - AsyncOpenAI/Python 1.46.1
        x-stainless-arch:
          - arm64
        x-stainless-async:
          - async:asyncio
        x-stainless-lang:
          - python
        x-stainless-os:
          - MacOS
        x-stainless-package-version:
          - 1.46.1
        x-stainless-raw-response:
          - "true"
        x-stainless-runtime:
          - CPython
        x-stainless-runtime-version:
          - 3.11.9
      method: POST
      uri: https://api.openai.com/v1/chat/completions
    response:
      body:
        string: !!binary |
          H4sIAAAAAAAAA2xSXY+bMBB851dY+xxOHJAj4a0P1emkXEWrqtWlqZDPLODW2AgvUnNR/nvFR4Dk
          jgdk7Xhm1rN7chgDmUHMQJScRFUr99Ou/JqEb9Xn72Wi35K9Dvz9JvnylHibF4RVxzCvf1DQhXUn
          TFUrJGn0AIsGOWGneh/52yhY30dRD1QmQ9XRiprc0Li+54eut3G9h5FYGinQQsx+OYwxdur/XYs6
          w38QM291qVRoLS8Q4ukSY9AY1VWAWystcU2wmkFhNKHuutatUguAjFGp4ErNxsN3WpznnLhSaRlK
          +qkf1fEb3z1HuC/2IjDPP14WfoP0se4bylstpnwW+FSPb8wYA82rnls3UlNqyTTHGzpjwJuirVBT
          1zqcDtBfO0B8gJ2xxKRmJCtcsdy0OmM1coF3BzjDlc7Z+ej8exFRg3lruRqzG+vnaRjKFHVjXu1N
          tpBLLW2ZNsht/8Zl1M7FrfeB9mqaUDemqikl8xd1JxtE60EV5mWbUX/cCyBDXC1Y2wvrSi/NkLjs
          xz1tmOCixGymes7iie9NP5IYnil18U7FGZXAHi1hleZSF9j0g+23o07DtXjIMNwGIThn5z8AAAD/
          /wMAKDi+epcDAAA=
      headers:
        CF-Cache-Status:
          - DYNAMIC
        CF-RAY:
          - 8d765e55095c06a9-SJC
        Connection:
          - keep-alive
        Content-Encoding:
          - gzip
        Content-Type:
          - application/json
        Date:
          - Thu, 24 Oct 2024 01:59:37 GMT
        Server:
          - cloudflare
        Transfer-Encoding:
          - chunked
        X-Content-Type-Options:
          - nosniff
        access-control-expose-headers:
          - X-Request-ID
        alt-svc:
          - h3=":443"; ma=86400
        openai-organization:
          - future-house-xr4tdh
        openai-processing-ms:
          - "1313"
        openai-version:
          - "2020-10-01"
        strict-transport-security:
          - max-age=31536000; includeSubDomains; preload
        x-ratelimit-limit-requests:
          - "10000"
        x-ratelimit-limit-tokens:
          - "30000000"
        x-ratelimit-remaining-requests:
          - "9999"
        x-ratelimit-remaining-tokens:
          - "29999688"
        x-ratelimit-reset-requests:
          - 6ms
        x-ratelimit-reset-tokens:
          - 0s
        x-request-id:
          - req_609d06ba2432bb13fe0097523bc4a0f0
      status:
        code: 200
        message: OK
version: 1
