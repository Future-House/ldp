interactions:
  - request:
      body:
        '{"messages": [{"role": "system", "content": "Answer the following questions
        as best you can. You have access to the following tools:\n\nNAME: print_story\n\nSYNOPSIS:\n    print_story(string
        story)\n\nDESCRIPTION:\n    Print a story.\n\nPARAMETERS:\n    story (string):
        Story to print.\n\nNAME: cast_float\n\nSYNOPSIS:\n    cast_float(string x)\n\nDESCRIPTION:\n    Cast
        the input argument x to a float.\n\nPARAMETERS:\n    x (string): No description
        provided.\n\nNAME: cast_int\n\nSYNOPSIS:\n    cast_int(number x)\n\nDESCRIPTION:\n    Cast
        the input argument x to an integer.\n\nPARAMETERS:\n    x (number): No description
        provided.\n\nUse the following format:\n\nThought: you should always think about
        what to do\nAction: the action to take, should be one of [print_story, cast_float,
        cast_int]\nAction Input: comma separated list of inputs to action as python
        tuple\nObservation: the result of the action\n... (this Thought/Action/Action
        Input/Observation can repeat N times)\n\nExample:\n\nThought: I need to use
        the get_weather tool\nAction: get_weather\nAction Input: \"New York\", 7\nObservation:
        The 7 day forecast for New York is [...]"}, {"role": "user", "content": "Write
        a 5 word story via print_story"}], "model": "gpt-4o", "stop": ["Observation:",
        "Action:"], "temperature": 0.1, "tool_choice": "none", "tools": [{"type": "function",
        "function": {"name": "print_story", "description": "Print a story.", "parameters":
        {"type": "object", "properties": {"story": {"description": "Story to print.",
        "title": "Story", "type": "string"}}, "required": ["story"]}}}, {"type": "function",
        "function": {"name": "cast_float", "description": "Cast the input argument x
        to a float.", "parameters": {"type": "object", "properties": {"x": {"title":
        "X", "type": "string"}}, "required": ["x"]}}}, {"type": "function", "function":
        {"name": "cast_int", "description": "Cast the input argument x to an integer.",
        "parameters": {"type": "object", "properties": {"x": {"title": "X", "type":
        "number"}}, "required": ["x"]}}}]}'
      headers:
        accept:
          - application/json
        accept-encoding:
          - gzip, deflate
        connection:
          - keep-alive
        content-length:
          - "2020"
        content-type:
          - application/json
        host:
          - api.openai.com
        user-agent:
          - AsyncOpenAI/Python 1.46.1
        x-stainless-arch:
          - arm64
        x-stainless-async:
          - async:asyncio
        x-stainless-lang:
          - python
        x-stainless-os:
          - MacOS
        x-stainless-package-version:
          - 1.46.1
        x-stainless-raw-response:
          - "true"
        x-stainless-runtime:
          - CPython
        x-stainless-runtime-version:
          - 3.11.9
      method: POST
      uri: https://api.openai.com/v1/chat/completions
    response:
      body:
        string: !!binary |
          H4sIAAAAAAAAA2yQX0/CMBTF3/cpmvvMzJzAZG8mvmhUDP4J0ZildHdbpWubtiiG8N1NtwEj8NKH
          c3p+99y7CQgBnkNKgFXUsVqL8Obhdzb/eX25m96+LR/fp2s2w9n6Oecf9/ETDHxCLb6RuV3qgqla
          C3RcydZmBqlDT71M4kkyiSdR0hi1ylH4WKldOFRhHMXDMLoOo3EXrBRnaCElnwEhhGya11eUOa4h
          JdFgp9RoLS0R0v0nQsAo4RWg1nLrqHQwOJhMSYeyad2XDRYrS30ruRKi07f7OUKV2qiF7fy9XnDJ
          bZUZpFZJz7ROaWjcbUDIV7PP6qgiaKNq7TKnlig98Go0anlwuODB7XYFpxwV50JHuCxHR7mwvYMA
          o6zCvEcMerudzjyHaPfjsjyhBB0J7J91WGcFlyUabXh74kJnNMmjMQ5jmkCwDf4BAAD//wMAE3hr
          m2sCAAA=
      headers:
        CF-Cache-Status:
          - DYNAMIC
        CF-RAY:
          - 8d7bdfc55ae01703-SJC
        Connection:
          - keep-alive
        Content-Encoding:
          - gzip
        Content-Type:
          - application/json
        Date:
          - Thu, 24 Oct 2024 18:01:47 GMT
        Server:
          - cloudflare
        Transfer-Encoding:
          - chunked
        X-Content-Type-Options:
          - nosniff
        access-control-expose-headers:
          - X-Request-ID
        alt-svc:
          - h3=":443"; ma=86400
        openai-organization:
          - future-house-xr4tdh
        openai-processing-ms:
          - "348"
        openai-version:
          - "2020-10-01"
        strict-transport-security:
          - max-age=31536000; includeSubDomains; preload
        x-ratelimit-limit-requests:
          - "10000"
        x-ratelimit-limit-tokens:
          - "30000000"
        x-ratelimit-remaining-requests:
          - "9999"
        x-ratelimit-remaining-tokens:
          - "29999709"
        x-ratelimit-reset-requests:
          - 6ms
        x-ratelimit-reset-tokens:
          - 0s
        x-request-id:
          - req_16f5143ccbacb405159d18f552dc5bb7
      status:
        code: 200
        message: OK
  - request:
      body:
        '{"messages": [{"role": "system", "content": "Answer the following questions
        as best you can. You have access to the following tools:\n\nNAME: print_story\n\nSYNOPSIS:\n    print_story(string
        story)\n\nDESCRIPTION:\n    Print a story.\n\nPARAMETERS:\n    story (string):
        Story to print.\n\nNAME: cast_float\n\nSYNOPSIS:\n    cast_float(string x)\n\nDESCRIPTION:\n    Cast
        the input argument x to a float.\n\nPARAMETERS:\n    x (string): No description
        provided.\n\nNAME: cast_int\n\nSYNOPSIS:\n    cast_int(number x)\n\nDESCRIPTION:\n    Cast
        the input argument x to an integer.\n\nPARAMETERS:\n    x (number): No description
        provided.\n\nUse the following format:\n\nThought: you should always think about
        what to do\nAction: the action to take, should be one of [print_story, cast_float,
        cast_int]\nAction Input: comma separated list of inputs to action as python
        tuple\nObservation: the result of the action\n... (this Thought/Action/Action
        Input/Observation can repeat N times)\n\nExample:\n\nThought: I need to use
        the get_weather tool\nAction: get_weather\nAction Input: \"New York\", 7\nObservation:
        The 7 day forecast for New York is [...]"}, {"role": "user", "content": "Write
        a 5 word story via print_story"}, {"role": "assistant", "content": "Thought:
        . Based on this reasoning, let''s select the appropriate tool!\n Action: "}],
        "model": "gpt-4o", "stop": ["Observation:", "Action:"], "temperature": 0.1,
        "tool_choice": "required", "tools": [{"type": "function", "function": {"name":
        "print_story", "description": "Print a story.", "parameters": {"type": "object",
        "properties": {"story": {"description": "Story to print.", "title": "Story",
        "type": "string"}}, "required": ["story"]}}}, {"type": "function", "function":
        {"name": "cast_float", "description": "Cast the input argument x to a float.",
        "parameters": {"type": "object", "properties": {"x": {"title": "X", "type":
        "string"}}, "required": ["x"]}}}, {"type": "function", "function": {"name":
        "cast_int", "description": "Cast the input argument x to an integer.", "parameters":
        {"type": "object", "properties": {"x": {"title": "X", "type": "number"}}, "required":
        ["x"]}}}]}'
      headers:
        accept:
          - application/json
        accept-encoding:
          - gzip, deflate
        connection:
          - keep-alive
        content-length:
          - "2143"
        content-type:
          - application/json
        host:
          - api.openai.com
        user-agent:
          - AsyncOpenAI/Python 1.46.1
        x-stainless-arch:
          - arm64
        x-stainless-async:
          - async:asyncio
        x-stainless-lang:
          - python
        x-stainless-os:
          - MacOS
        x-stainless-package-version:
          - 1.46.1
        x-stainless-raw-response:
          - "true"
        x-stainless-runtime:
          - CPython
        x-stainless-runtime-version:
          - 3.11.9
      method: POST
      uri: https://api.openai.com/v1/chat/completions
    response:
      body:
        string: !!binary |
          H4sIAAAAAAAAA2xSXY+bMBB851dY+xxOHJeEg7d+qA9Vrqmuaq9VUyHHLODW2JZt1Euj/PcKQ4Dk
          jgdk7Xhm1rN7DAgBXkBGgNXUsUaL8M3m7+P3zWb19Jiu1/Xtnd78O2y/7D+Wb7/un2HRMdT+NzJ3
          Zt0w1WiBjivZw8wgddip3iZxmqRxGiUeaFSBoqNV2oVLFcZRvAyj+zBaD8RacYYWMvIzIISQo/93
          LcoCnyEj0eJcadBaWiFk4yVCwCjRVYBay62j0sFiApmSDmXXtWyFmAFOKZEzKsRk3H/H2XnKiQqR
          0+27B/qk33/jIrl/4Kti+0N/oJ8/zfx66YP2DZWtZGM+M3ysZ1dmhICkjedqw6XLrVPmcEUnBKip
          2gal61qH4w78tR1kO9go6wiXxPEGF6RUrSyIRsrwZgcnuNA5Ba+df80iMli2loohu6F+GochVKWN
          2turbKHkkts6N0itf+M86uDs5n2gvZgmaKMa7XKn/qDsZO+SVa8K07JNaDzsBTjlqJix0jPrQi8v
          0FHuxz1uGKOsxmKiRsHsiS9NX5Pon8ll9UIlGJTAHqzDJi+5rND4wfrt0DlNimiNy5gmEJyC/wAA
          AP//AwB439G5lwMAAA==
      headers:
        CF-Cache-Status:
          - DYNAMIC
        CF-RAY:
          - 8d7bdfc85f261703-SJC
        Connection:
          - keep-alive
        Content-Encoding:
          - gzip
        Content-Type:
          - application/json
        Date:
          - Thu, 24 Oct 2024 18:01:48 GMT
        Server:
          - cloudflare
        Transfer-Encoding:
          - chunked
        X-Content-Type-Options:
          - nosniff
        access-control-expose-headers:
          - X-Request-ID
        alt-svc:
          - h3=":443"; ma=86400
        openai-organization:
          - future-house-xr4tdh
        openai-processing-ms:
          - "265"
        openai-version:
          - "2020-10-01"
        strict-transport-security:
          - max-age=31536000; includeSubDomains; preload
        x-ratelimit-limit-requests:
          - "10000"
        x-ratelimit-limit-tokens:
          - "30000000"
        x-ratelimit-remaining-requests:
          - "9999"
        x-ratelimit-remaining-tokens:
          - "29999688"
        x-ratelimit-reset-requests:
          - 6ms
        x-ratelimit-reset-tokens:
          - 0s
        x-request-id:
          - req_5699491796c099fcba60a9509be8c766
      status:
        code: 200
        message: OK
version: 1
