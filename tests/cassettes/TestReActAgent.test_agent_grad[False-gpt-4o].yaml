interactions:
- request:
    body: '{"messages": [{"role": "system", "content": "Answer the following questions
      as best you can. You have access to the following tools:\n\nNAME: print_story\n\nSYNOPSIS:\n    print_story(string
      story)\n\nDESCRIPTION:\n    Print a story.\n\nPARAMETERS:\n    story (string):
      Story to print.\n\nNAME: cast_float\n\nSYNOPSIS:\n    cast_float(string x)\n\nDESCRIPTION:\n    Cast
      the input argument x to a float.\n\nPARAMETERS:\n    x (string): No description
      provided.\n\nNAME: cast_int\n\nSYNOPSIS:\n    cast_int(number x)\n\nDESCRIPTION:\n    Cast
      the input argument x to an integer.\n\nPARAMETERS:\n    x (number): No description
      provided.\n\nUse the following format:\n\nThought: you should always think about
      what to do\nAction: the action to take, should be one of [print_story, cast_float,
      cast_int]\nAction Input: comma separated list of inputs to action as python
      tuple\nObservation: the result of the action\n... (this Thought/Action/Action
      Input/Observation can repeat N times)\n\nExample:\n\nThought: I need to use
      the get_weather tool\nAction: get_weather\nAction Input: \"New York\", 7\nObservation:
      The 7 day forecast for New York is [...]"}, {"role": "user", "content": "Write
      a 5 word story via print_story"}], "model": "gpt-4o", "stop": ["Observation:",
      "Action:"], "temperature": 0.1, "tool_choice": "none", "tools": [{"type": "function",
      "function": {"name": "print_story", "description": "Print a story.", "parameters":
      {"type": "object", "properties": {"story": {"description": "Story to print.",
      "title": "Story", "type": "string"}}, "required": ["story"]}}}, {"type": "function",
      "function": {"name": "cast_float", "description": "Cast the input argument x
      to a float.", "parameters": {"type": "object", "properties": {"x": {"title":
      "X", "type": "string"}}, "required": ["x"]}}}, {"type": "function", "function":
      {"name": "cast_int", "description": "Cast the input argument x to an integer.",
      "parameters": {"type": "object", "properties": {"x": {"title": "X", "type":
      "number"}}, "required": ["x"]}}}]}'
    headers:
      accept:
      - application/json
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      content-length:
      - '2020'
      content-type:
      - application/json
      host:
      - api.openai.com
      user-agent:
      - AsyncOpenAI/Python 1.46.1
      x-stainless-arch:
      - arm64
      x-stainless-async:
      - async:asyncio
      x-stainless-lang:
      - python
      x-stainless-os:
      - MacOS
      x-stainless-package-version:
      - 1.46.1
      x-stainless-raw-response:
      - 'true'
      x-stainless-runtime:
      - CPython
      x-stainless-runtime-version:
      - 3.11.9
    method: POST
    uri: https://api.openai.com/v1/chat/completions
  response:
    body:
      string: !!binary |
        H4sIAAAAAAAAA2yQzW6DMBCE7zyFtedQEUKg4VZVuVSpemp7qCrkmAWcGtuyHSk/yrtXBpIQJRcf
        Zjzfzu4xIAR4CTkB1lDHWi3Cl9Wasni1P3w3Zrc8fIjnzftn+va1NK8qg4lPqPUGmTunnphqtUDH
        lextZpA69NRpFi+yaZwlaWe0qkThY7V2YaLCOIqTMHoOo3QINooztJCTn4AQQo7d6yvKEneQk2hy
        Vlq0ltYI+eUTIWCU8ApQa7l1VDqYXE2mpEPZtR7LBqutpb6V3Aox6KfLHKFqbdTaDv5Fr7jktikM
        UqukZ1qnNHTuKSDkt9tne1MRtFGtdoVTfyg9cDaf9zy4XvDqDruCU46KR6EbXFGio1zY0UGAUdZg
        OSIGo93uZz5C9PtxWd9RgoEEdm8dtkXFZY1GG96fuNJFMmdpiclilkBwCv4BAAD//wMADgX/AGsC
        AAA=
    headers:
      CF-Cache-Status:
      - DYNAMIC
      CF-RAY:
      - 8d743ab67bdccea8-SJC
      Connection:
      - keep-alive
      Content-Encoding:
      - gzip
      Content-Type:
      - application/json
      Date:
      - Wed, 23 Oct 2024 19:45:47 GMT
      Server:
      - cloudflare
      Transfer-Encoding:
      - chunked
      X-Content-Type-Options:
      - nosniff
      access-control-expose-headers:
      - X-Request-ID
      alt-svc:
      - h3=":443"; ma=86400
      openai-organization:
      - future-house-xr4tdh
      openai-processing-ms:
      - '945'
      openai-version:
      - '2020-10-01'
      strict-transport-security:
      - max-age=31536000; includeSubDomains; preload
      x-ratelimit-limit-requests:
      - '10000'
      x-ratelimit-limit-tokens:
      - '30000000'
      x-ratelimit-remaining-requests:
      - '9999'
      x-ratelimit-remaining-tokens:
      - '29999709'
      x-ratelimit-reset-requests:
      - 6ms
      x-ratelimit-reset-tokens:
      - 0s
      x-request-id:
      - req_886da7daf8d2985567ff0076fa0ba29b
    status:
      code: 200
      message: OK
- request:
    body: '{"messages": [{"role": "system", "content": "Answer the following questions
      as best you can. You have access to the following tools:\n\nNAME: print_story\n\nSYNOPSIS:\n    print_story(string
      story)\n\nDESCRIPTION:\n    Print a story.\n\nPARAMETERS:\n    story (string):
      Story to print.\n\nNAME: cast_float\n\nSYNOPSIS:\n    cast_float(string x)\n\nDESCRIPTION:\n    Cast
      the input argument x to a float.\n\nPARAMETERS:\n    x (string): No description
      provided.\n\nNAME: cast_int\n\nSYNOPSIS:\n    cast_int(number x)\n\nDESCRIPTION:\n    Cast
      the input argument x to an integer.\n\nPARAMETERS:\n    x (number): No description
      provided.\n\nUse the following format:\n\nThought: you should always think about
      what to do\nAction: the action to take, should be one of [print_story, cast_float,
      cast_int]\nAction Input: comma separated list of inputs to action as python
      tuple\nObservation: the result of the action\n... (this Thought/Action/Action
      Input/Observation can repeat N times)\n\nExample:\n\nThought: I need to use
      the get_weather tool\nAction: get_weather\nAction Input: \"New York\", 7\nObservation:
      The 7 day forecast for New York is [...]"}, {"role": "user", "content": "Write
      a 5 word story via print_story"}, {"role": "assistant", "content": "Thought:
      . Based on this reasoning, let''s select the appropriate tool!\n Action: "}],
      "model": "gpt-4o", "stop": ["Observation:", "Action:"], "temperature": 0.1,
      "tool_choice": "required", "tools": [{"type": "function", "function": {"name":
      "print_story", "description": "Print a story.", "parameters": {"type": "object",
      "properties": {"story": {"description": "Story to print.", "title": "Story",
      "type": "string"}}, "required": ["story"]}}}, {"type": "function", "function":
      {"name": "cast_float", "description": "Cast the input argument x to a float.",
      "parameters": {"type": "object", "properties": {"x": {"title": "X", "type":
      "string"}}, "required": ["x"]}}}, {"type": "function", "function": {"name":
      "cast_int", "description": "Cast the input argument x to an integer.", "parameters":
      {"type": "object", "properties": {"x": {"title": "X", "type": "number"}}, "required":
      ["x"]}}}]}'
    headers:
      accept:
      - application/json
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      content-length:
      - '2143'
      content-type:
      - application/json
      host:
      - api.openai.com
      user-agent:
      - AsyncOpenAI/Python 1.46.1
      x-stainless-arch:
      - arm64
      x-stainless-async:
      - async:asyncio
      x-stainless-lang:
      - python
      x-stainless-os:
      - MacOS
      x-stainless-package-version:
      - 1.46.1
      x-stainless-raw-response:
      - 'true'
      x-stainless-runtime:
      - CPython
      x-stainless-runtime-version:
      - 3.11.9
    method: POST
    uri: https://api.openai.com/v1/chat/completions
  response:
    body:
      string: !!binary |
        H4sIAAAAAAAAA2xSYW/TMBD9nl9h3ed2yrpsJflWGEJCAyQmFSSKIte5Jh6ObewLrFT97yhOmqTd
        8iGy7vm9d353h4gxkAVkDETFSdRWzVcPW16sV/bhe33/zwr/5WNVfX5+2+iV+RDDrGWY7RMKOrGu
        hKmtQpJGd7BwyAlb1evlIl1eL5bJMgC1KVC1tNLSPDHzRbxI5vGbeXzXEysjBXrI2I+IMcYO4d+2
        qAt8hozFs1OlRu95iZANlxgDZ1RbAe699MQ1wWwEhdGEuu1aN0pNADJG5YIrNRp332FyHnPiSuVf
        Nd/Z9dp9e3z6/Wn97s+9f5+maeImfp303oaGdo0WQz4TfKhnF2aMgeZ14FonNeWejNtf0BkD7sqm
        Rk1t63DYQLi2gWwDj432SOxvJb1F55lH4ZA8I8O0LCu62sARzuSO0Wvnn5OkHO4az1UfYV8/DjNR
        prTObP1FxLCTWvoqd8h9eOo08ejkFnygORsqWGdqSzmZX6hb2ZvlbacK486N6KJfDyBDXE1Y6Yl1
        ppcXSFyGqQ+LJriosBipcTR54kvT1yS6Z0pdvlCJeiXwe09Y5zupS3RhvmFJbJ7cirsCk/QmgegY
        /QcAAP//AwDbhYOJngMAAA==
    headers:
      CF-Cache-Status:
      - DYNAMIC
      CF-RAY:
      - 8d743abd5bdccea8-SJC
      Connection:
      - keep-alive
      Content-Encoding:
      - gzip
      Content-Type:
      - application/json
      Date:
      - Wed, 23 Oct 2024 19:45:47 GMT
      Server:
      - cloudflare
      Transfer-Encoding:
      - chunked
      X-Content-Type-Options:
      - nosniff
      access-control-expose-headers:
      - X-Request-ID
      alt-svc:
      - h3=":443"; ma=86400
      openai-organization:
      - future-house-xr4tdh
      openai-processing-ms:
      - '632'
      openai-version:
      - '2020-10-01'
      strict-transport-security:
      - max-age=31536000; includeSubDomains; preload
      x-ratelimit-limit-requests:
      - '10000'
      x-ratelimit-limit-tokens:
      - '30000000'
      x-ratelimit-remaining-requests:
      - '9999'
      x-ratelimit-remaining-tokens:
      - '29999688'
      x-ratelimit-reset-requests:
      - 6ms
      x-ratelimit-reset-tokens:
      - 0s
      x-request-id:
      - req_42ed7a515165c2c9151bc6d92cc5aed5
    status:
      code: 200
      message: OK
version: 1
